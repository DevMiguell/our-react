{"mappings":"AAAA,IAAI,QAAQ;IACV,eAAe,CAAC,KAAK,OAAO,GAAG,WAAa;QAC1C,IAAI,OAAO,OAAO,YAChB,IAAI;YACF,OAAO,IAAI;QACb,EAAE,OAAO,EAAE,QAAO,EAAE,IAAG,EAAE,EAAE;YACzB,QAAQ,IAAI,CAAC,CAAA,OAAQ;gBACnB,QAAQ,GAAG,CAAC;gBACZ,aAAa,GAAG,CAAC,KAAK;gBACtB;YACF;YACA,OAAO;gBAAE,KAAK;gBAAM,OAAO;oBAAE,UAAU;wBAAC;qBAAe;gBAAC;YAAE;QAC5D;QAEF,IAAI,UAAU;YAAE;YAAK,OAAO;gBAAE,GAAG,KAAK;gBAAE;YAAS;QAAE;QACnD,6BAA6B;QAC7B,OAAO;IACT;AACF;AAEA,oEAAoE;AACpE,MAAM,eAAe,IAAI;AAEzB,MAAM,gBAAgB,CAAC,2BAA2B,MAAQ;IACxD,IAAI,aAAa,GAAG,CAAC,MACnB,OAAO,aAAa,GAAG,CAAC;IAE1B,MAAM;QAAE,SAAS;QAA6B;IAAI,EAAE;AACtD;AAEA,MAAM,MAAM,IAAM;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,SAAS;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,SAAS;IACnC,MAAM,cAAc,cAAc,IAAM,MAAM,2CAC3C,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,IAChB,IAAI,CAAC,CAAA,UAAW,QAAQ,OAAO,GAAG;IAErC,qBACE,oBAAC;QAAI,WAAU;;;;;;;qBACb,oBAAC;;;;;;;OAAG,WAAQ,MAAK,oBACjB,oBAAC;QAAM,OAAO;QAAM,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;QAAG,MAAK;QAAO,aAAY;;;;;;;sBACpF,oBAAC;;;;;;;OAAG,kBAAe,QAClB,2BACD,oBAAC;QAAO,SAAS,IAAM,SAAS,QAAQ;;;;;;;OAAI,oBAC5C,oBAAC;QAAO,SAAS,IAAM,SAAS,QAAQ;;;;;;;OAAI,oBAC5C,oBAAC;;;;;;;OAAE;AAET;AAEA,yBAAyB;AACzB,MAAM,SAAS,EAAE;AACjB,IAAI,cAAc;AAElB,MAAM,WAAW,CAAC,eAAiB;IACjC,MAAM,eAAe;IACrB,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI;IAE/C,QAAQ,GAAG,CAAC;IACZ,MAAM,WAAW,CAAC,WAAa;QAC7B,MAAM,CAAC,aAAa,GAAG;QACvB;IACF;IACA;IAEA,OAAO;QAAC,MAAM,CAAC,aAAa;QAAE;KAAS;AACzC;AAEA,MAAM,WAAW,CAAC,cAAc,YAAc;IAC5C,IAAI;QAAC;QAAU;KAAS,CAAC,QAAQ,CAAC,OAAO,eAAe;QACtD,UAAU,WAAW,CAAC,SAAS,cAAc,CAAC,OAAO;QACrD;IACF,CAAC;IACD,MAAM,mBAAmB,SAAS,aAAa,CAAC,aAAa,GAAG;IAChE,IAAI,aAAa,KAAK,EACpB,OAAO,IAAI,CAAC,aAAa,KAAK,EAAE,MAAM,CAAC,CAAA,IAAK,KAAK,YAAY,OAAO,CAAC,CAAA,IAAK,gBAAgB,CAAC,EAAE,GAAG,aAAa,KAAK,CAAC,EAAE;IAEvH,IAAI,aAAa,KAAK,CAAC,QAAQ,EAC7B,aAAa,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,QAAS,SAAS,OAAO;IAE/D,8BAA8B;IAC9B,UAAU,WAAW,CAAC;AAExB;AAEA,MAAM,WAAW,IAAM;IACrB,cAAc;IACd,SAAS,aAAa,CAAC,QAAQ,UAAU,CAAC,MAAM;IAChD,uBAAS,oBAAC;;;;;;;QAAQ,SAAS,aAAa,CAAC;AAC3C;AAEA,uCAAuC;AACvC,uBAAS,oBAAC;;;;;;;IAAQ,SAAS,aAAa,CAAC","sources":["root.tsx"],"sourcesContent":["let React = {\n  createElement: (tag, props, ...children) => {\n    if (typeof tag == \"function\") {\n      try {\n        return tag(props);\n      } catch ({ promise, key }) {\n        promise.then(data => {\n          console.log(promise);\n          promiseCache.set(key, data);\n          rerender();\n        })\n        return { tag: 'h1', props: { children: ['I AM LOADING'] } }\n      }\n    }\n    var element = { tag, props: { ...props, children } };\n    //    console.log( element );\n    return element;\n  },\n};\n\n//to know if data is ready we implement cache, a closure, not global\nconst promiseCache = new Map();\n\nconst createResouce = (thingThatReturnsSomething, key) => {\n  if (promiseCache.has(key)) {\n    return promiseCache.get(key);\n  }\n  throw { promise: thingThatReturnsSomething(), key };\n}\n\nconst App = () => {\n  const [name, setName] = useState(\"person\");\n  const [count, setCount] = useState(0);\n  const dogPhotoUrl = createResouce(() => fetch(\"https://dog.ceo/api/breeds/image/random\")\n    .then(r => r.json())\n    .then(payload => payload.message), 'dogPhoto');\n\n  return (\n    <div className=\"react-2020\">\n      <h1>Hello, {name}!</h1>\n      <input value={name} onchange={e => setName(e.target.value)} type=\"text\" placeholder=\"name\" />\n      <h2>The count is: {count}</h2>\n      {dogPhotoUrl}\n      <button onclick={() => setCount(count + 1)}>+</button>\n      <button onclick={() => setCount(count - 1)}>-</button>\n      <p>Yes</p></div>\n  );\n};\n\n//Moving parts of our app\nconst states = []\nlet stateCursor = 0;\n\nconst useState = (initialState) => {\n  const FROZENCURSOR = stateCursor;\n  states[FROZENCURSOR] = states[FROZENCURSOR] || initialState;\n\n  console.log(states);\n  const setState = (newState) => {\n    states[FROZENCURSOR] = newState;\n    rerender();\n  };\n  stateCursor++;\n\n  return [states[FROZENCURSOR], setState]\n}\n\nconst renderer = (reactElement, container) => {\n  if (['string', 'number'].includes(typeof reactElement)) {\n    container.appendChild(document.createTextNode(String(reactElement)));\n    return;\n  }\n  const actualDomElement = document.createElement(reactElement.tag);\n  if (reactElement.props) {\n    Object.keys(reactElement.props).filter(p => p != 'children').forEach(p => actualDomElement[p] = reactElement.props[p]);\n  }\n  if (reactElement.props.children) {\n    reactElement.props.children.forEach(child => renderer(child, actualDomElement));\n  }\n  //append root to the container\n  container.appendChild(actualDomElement);\n\n}\n\nconst rerender = () => {\n  stateCursor = 0;\n  document.querySelector(\"#app\").firstChild.remove();\n  renderer(<App />, document.querySelector('#app'));\n}\n\n//windows.app the id is also a variable\nrenderer(<App />, document.querySelector('#app'));"],"names":[],"version":3,"file":"index.d6ebb9b7.js.map","sourceRoot":"/__parcel_source_root/"}